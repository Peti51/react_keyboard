{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","componentDidMount","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,OAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WACEJ,SAASK,oBAAoB,UAAWC,KAAKC,qBAZjD,oBAeE,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAC6B,QAA1BF,KAAKR,MAAMC,WACV,0BADD,mCAG6BO,KAAKR,MAAMC,WAHxC,aAnBX,GAAyBU,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.bbd3cdba.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {};\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    pressedKey: 'key',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.componentDidMount);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey === 'key' ? (\n            'Nothing was pressed yet'\n          ) : (\n            `The last pressed key is [${this.state.pressedKey}]`\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}